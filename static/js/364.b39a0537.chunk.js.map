{"version":3,"file":"static/js/364.b39a0537.chunk.js","mappings":"sMAEe,SAAS,EAACA,GACvB,OAA0BC,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,EAASN,EAAMO,aAAaC,MAChC,SAACC,GAAD,OAAaA,GAAWT,EAAMU,OAAOC,KAAK,QAW5C,OARAC,EAAAA,EAAAA,UAAQ,WACN,IAAIN,IAAUF,EACT,OAAIA,EAAkBC,GAAa,QAC/BC,IACPH,EAAS,IAAMU,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,KAC7DX,GAAa,OAEd,CAACL,EAAMO,aAAaI,KAAK,QAE1B,gBACEM,UAAU,OACVC,MAAM,UACNR,OAAQV,EAAMU,OACdS,MAAO,CACLC,gBAAiBlB,EACjBmB,SAAUrB,EAAMqB,SAChBC,OAAQ","sources":["tiles/scratch.js"],"sourcesContent":["import { useState, useMemo } from \"react\";\n\nexport default function (props) {\n  const [color, setColor] = useState();\n  const [wasActive, setWasActive] = useState(false);\n  const active = props.activeCoords.some(\n    (element) => element == props.coords.join(\",\")\n  );\n\n  useMemo(() => {\n    if (active && wasActive) return;\n    else if (wasActive) return setWasActive(false);\n    else if (active) {\n      setColor(\"#\" + Math.floor(Math.random() * 16777215).toString(16));\n      setWasActive(true);\n    }\n  }, [props.activeCoords.join(\",\")]);\n  return (\n    <div\n      className=\"tile\"\n      value=\"a value\"\n      coords={props.coords}\n      style={{\n        backgroundColor: color,\n        gridArea: props.gridArea,\n        border: \"1px solid gray\",\n      }}\n    ></div>\n  );\n}\n"],"names":["props","useState","color","setColor","wasActive","setWasActive","active","activeCoords","some","element","coords","join","useMemo","Math","floor","random","toString","className","value","style","backgroundColor","gridArea","border"],"sourceRoot":""}
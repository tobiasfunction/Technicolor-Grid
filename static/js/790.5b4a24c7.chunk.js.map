{"version":3,"file":"static/js/790.5b4a24c7.chunk.js","mappings":"sMAEe,SAAS,EAACA,GACvB,OAAgCC,EAAAA,EAAAA,UAAS,QAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,QAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAEMC,EAAeR,EAAMS,OAAOC,KAAK,MAEvCC,EAAAA,EAAAA,UAAQ,WACN,IAAMC,EAASZ,EAAMa,aAAaC,SAASN,GAC3C,IAAII,IAAUN,EACT,OAAIA,EAAkBC,GAAa,QAC/BK,KAoCX,WACE,IAAMG,EAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,UACtBC,EAAW,cAAUJ,EAAV,gBACXK,EAAW,cAAUL,EAAM,GAAhB,gBACjBZ,EAAYgB,GACZd,EAAYe,GAxCVC,GACAd,GAAa,OAEd,CAACP,EAAMa,aAAaH,KAAK,OAS5B,IAPA,IAAMY,EAAQ,GAEVC,EAAM,EACNC,EAAO,IACPC,EAAQ,EACRC,GAAa,EAEVF,EAAO,GACZF,EAAMK,MACJ,gBACEC,UAAU,eACVC,MAAO,CACLC,gBAAiBJ,EAAatB,EAAWF,EACzC6B,SAAU/B,EAAM+B,SAChBC,OAAQR,EAAO,IACfS,gBAAiBR,EAAQ,KACzBS,MAAOV,EAAO,KAGhBf,OAAQT,EAAMS,QADTc,IAITA,IACAC,GAAQ,GACRC,GAAS,IACTC,GAAcA,EAGhB,OAAO,8BAAGJ","sources":["tiles/tunnels.js"],"sourcesContent":["import { useState, useMemo } from \"react\";\n\nexport default function (props) {\n  const [colorOne, setColorOne] = useState(\"#222\");\n  const [colorTwo, setColorTwo] = useState(\"#222\");\n  const [wasActive, setWasActive] = useState(false);\n\n  const coordsString = props.coords.join(\",\");\n\n  useMemo(() => {\n    const active = props.activeCoords.includes(coordsString);\n    if (active && wasActive) return;\n    else if (wasActive) return setWasActive(false);\n    else if (active) {\n      changeColor();\n      setWasActive(true);\n    }\n  }, [props.activeCoords.join(\",\")]);\n\n  const tiles = [];\n\n  let key = 1;\n  let size = 100;\n  let delay = 0;\n  let alternator = true;\n\n  while (size > 0) {\n    tiles.push(\n      <div\n        className=\"tile tunnels\"\n        style={{\n          backgroundColor: alternator ? colorTwo : colorOne,\n          gridArea: props.gridArea,\n          height: size + \"%\",\n          transitionDelay: delay + \"ms\",\n          width: size + \"%\",\n        }}\n        key={key}\n        coords={props.coords}\n      />\n    );\n    key++;\n    size -= 25;\n    delay += 150;\n    alternator = !alternator;\n  }\n\n  return <>{tiles}</>;\n\n  function changeColor() {\n    const hue = Math.floor(Math.random() * 330);\n    const newColorOne = `hsl(${hue}, 100%, 60%)`;\n    const newColorTwo = `hsl(${hue + 20}, 100%, 60%)`;\n    setColorOne(newColorOne);\n    setColorTwo(newColorTwo);\n  }\n}\n"],"names":["props","useState","colorOne","setColorOne","colorTwo","setColorTwo","wasActive","setWasActive","coordsString","coords","join","useMemo","active","activeCoords","includes","hue","Math","floor","random","newColorOne","newColorTwo","changeColor","tiles","key","size","delay","alternator","push","className","style","backgroundColor","gridArea","height","transitionDelay","width"],"sourceRoot":""}